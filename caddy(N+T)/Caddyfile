{
	order trojan before route
	order forward_proxy before trojan
	admin off
	log {
		output file /var/log/caddy/access.log
		level ERROR
	} #版本不小于v2.4.0才支持日志全局配置，否则各自配置。
	servers :443 {
		listener_wrappers {
			trojan #caddy-trojan插件应用必须配置
		}
		protocol {
			allow_h2c #开启H2C server支持，caddy-trojan插件应用必须启用。
			experimental_http3 #开启HTTP/3 server支持
		} #版本v2.5.2后配置调整为：protocols h1 h2c h2 h3
	}
	trojan {
		caddy
		no_proxy
		users diy443 #修改为自己的密码。密码可多组，用空格隔开。
	} #版本v2.5.2后才需要增加此部分配置
}

:443, xx.yy { #xx.yy修改为自己的域名。注意：逗号与域名之间有一个空格。
	tls {
		ciphers TLS_AES_256_GCM_SHA384 TLS_AES_128_GCM_SHA256 TLS_CHACHA20_POLY1305_SHA256 TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
		curves x25519 secp521r1 secp384r1 secp256r1
		alpn h2 http/1.1
	}

	forward_proxy {
		basic_auth user pass #naiveproxy用户与密码，修改为自己的。
		hide_ip
		hide_via
		probe_resistance
	}

	trojan {
		user diy443 #修改为自己的密码。密码可多组，用空格隔开。版本v2.5.2后无此条参数（删除）。
		connect_method
		websocket #开启WebSocket支持
	}

	@host {
		host xx.yy #限定域名访问（禁止以IP方式访问网站），修改为自己的域名。
	}
	route @host {
		header {
			Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" #启用HSTS
		}
		file_server {
			root /var/www/html #修改为自己存放的WEB文件路径
		}
	}
}
