
#user nobody nogroup; #表示以默认用户（root）运行。若取消注释，注意修改为相应权限的用户与组。
worker_processes auto;

#error_log /var/log/nginx/error.log;

#pid /run/nginx.pid;

events {
    worker_connections 1024;
}

stream { #以下为SNI分流配置：（示例仅配置了两个域名的SNI分流；如需要多个域名，增加对应参数即可。）
    map $ssl_preread_server_name $backend_name {
        zv.xx.yy  vless; #zv.xx.yy修改为自己的分流域名
        zh.xx.yy  http2; #zh.xx.yy修改为自己的分流域名
    }
    upstream vless { #vless与上对应
        server 127.0.0.1:5443; #转给vless应用的本地监听端口
    }
    upstream http2 { #http2与上对应
        server 127.0.0.1:7443; #转给http2应用的本地监听端口
    }
    server {
        listen 443;
        listen [::]:443; #无IPv6,此项可以删除。
        ssl_preread on;
        proxy_pass $backend_name;
        proxy_protocol on; #开启PROXY protocol发送（可选）。此参数是针对此监听端口开启（全局模式，即所有转发端口或进程开启。），故若有一个接收端不支持PROXY protocol就不能启用！
    }
} #SNI分流配置到此结束

#在如下http中添加对应网站的应用配置参数（可配置多个网站，必须与上对应。）
http {
#.........<省略>........
    server {
        listen 127.0.0.1:7443 ssl http2 proxy_protocol; #http/2 server本地监听端口与开启PROXY protocol接收（与上开启PROXY protocol发送对应，否则删除proxy_protocol参数！）。
        set_real_ip_from 127.0.0.1; #若上listen启用了PROXY protocol接收，配置此项参数；否则删除。
        real_ip_header proxy_protocol; #若上listen启用了PROXY protocol接收，配置此项参数；否则删除。

        ssl_certificate /home/tls/zh.xx.yy/zh.xx.yy.crt; #换成自己的证书，绝对路径。
        ssl_certificate_key /home/tls/zh.xx.yy/zh.xx.yy.key; #换成自己的密钥，绝对路径。

        ssl_protocols TLSv1.3 TLSv1.2; #TLSv1.3需使用版本不小于1.1.1的OpenSSL软件库包编译才支持
        ssl_ciphers TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305; #若不支持TLSv1.3，删除前三个密码套件。若证书为RSA证书，所有ECDSA改为RSA。
        ssl_ecdh_curve secp521r1:secp384r1:secp256r1:x25519; #该参数需使用版本不小于3.0.0的OpenSSL软件库包编译才支持
        ssl_prefer_server_ciphers on;

        location / {
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; #启用HSTS
            root /var/www/html; #修改为自己存放的WEB文件路径
            index index.html index.htm;
        }
    }
}
