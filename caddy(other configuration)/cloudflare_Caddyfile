#一、无其它，仅反代应用。
#原配置：
{
#.........<省略>........
	log {
		output file /var/log/caddy/access.log
		level ERROR
	} #版本不小于v2.4.0才支持日志全局配置，否则各自配置。
}

:443, xx.yy { #xx.yy修改为自己的域名。注意：逗号与域名之间有一个空格。
#.........<省略>........
	@host {
		host xx.yy #限定域名访问（禁止以IP方式访问网站），修改为自己的域名。
	}
#.........<省略>........

#以dns api方式申请tls证书（以上配置改为如下）：
{
#.........<省略>........
	log {
		output file /var/log/caddy/access.log
		level ERROR
	} #版本不小于v2.4.0才支持日志全局配置，否则各自配置。
	cert_issuer acme #acme表示从Let's Encrypt申请证书及密钥，zerossl表示从ZeroSSL申请证书及密钥。acme与zerossl二选一。注意：版本不小于v2.4.1才支持。
	acme_dns cloudflare e09062f1fd2545555fc8a15fceda2222 #换成你cloudflare的api token，此api token是你配置相关生成的，详细参考官方及cloudflare插件github。
}

:443, *.xx.yy { #*.xx.yy修改为自己的域名。注意：逗号与域名之间有一个空格。*.xx.yy表示申请通配符证书。
#.........<省略>........
	@host {
		host *.xx.yy #限定域名访问（禁止以IP方式访问网站），修改为自己的域名。
	}
#.........<省略>........
#注意：
#1、caddy采用DNS-01验证方式申请的证书与域名是一一对应的，不支持申请包含根域名的通配符证书。
#2、调整限定域名访问范围，不严格可直接修改为通配符域名。


#二、无SNI分流，回落为主应用。
#原配置：
{
#.........<省略>........
	auto_https off #禁用自动https
#.........<省略>........
}
#.........<省略>........
	@host {
		host xx.yy #限定域名访问（禁止以IP方式访问网站），修改为自己的域名。
	}
#.........<省略>........

#以dns api方式申请tls证书（以上配置改为如下）：
{
#.........<省略>........
	storage file_system {
		root /home/tls #存放证书及密钥的基本路径
	}
	cert_issuer acme #acme表示从Let's Encrypt申请证书及密钥，zerossl表示从ZeroSSL申请证书及密钥。必须acme与zerossl二选一（固定证书及密钥的目录便于引用）。注意：版本不小于v2.4.1才支持。
	acme_dns cloudflare e09062f1fd2545555fc8a15fceda2222 #换成你cloudflare的api token，此api token是你配置相关生成的，详细参考官方及cloudflare插件github。
	auto_https off #禁用自动https
#.........<省略>........
}
#.........<省略>........
	@host {
		host *.xx.yy #限定域名访问（禁止以IP方式访问网站），修改为自己的域名。
	}
#.........<省略>........
:6, *.xx.yy:6 #*.xx.yy修改为自己的域名。注意：逗号与域名之间有一个空格。*.xx.yy表示申请通配符证书。
#注意：
#1、caddy采用DNS-01验证方式申请的证书与域名是一一对应的，不支持申请包含根域名的通配符证书。
#2、调整限定域名访问范围，不严格可直接修改为通配符域名。


#三、有SNI分流的应用。
#原配置：
{
#.........<省略>........
	log {
		output file /var/log/caddy/access.log
		level ERROR
	} #版本不小于v2.4.0才支持日志全局配置，否则各自配置。
#.........<省略>........
}

:7443 { #https server监听端口，为naiveproxy、h2c proxy等应用服务。或#启用进程绑定后此端口失效，仅做标记作用。
#.........<省略>........
	tls /home/tls/zh.xx.yy/zh.xx.yy.crt /home/tls/zh.xx.yy/zh.xx.yy.key { #换成自己的证书与密钥，绝对路径。
		ciphers TLS_AES_256_GCM_SHA384 TLS_AES_128_GCM_SHA256 TLS_CHACHA20_POLY1305_SHA256 TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 #若无RSA证书，可删除所有RSA算法的密码套件；无ECC证书，可删除所有ECDSA算法的密码套件。
#.........<省略>........

#以dns api方式申请tls证书（以上配置改为如下）：
{
#.........<省略>........
	log {
		output file /var/log/caddy/access.log
		level ERROR
	} #版本不小于v2.4.0才支持日志全局配置，否则各自配置。
	storage file_system {
		root /home/tls #存放证书及密钥的基本路径
	}
	cert_issuer acme #acme表示从Let's Encrypt申请证书及密钥，zerossl表示从ZeroSSL申请证书及密钥。必须acme与zerossl二选一（固定证书及密钥的目录便于引用）。注意：版本不小于v2.4.1才支持。
	acme_dns cloudflare e09062f1fd2545555fc8a15fceda2222 #换成你cloudflare的api token，此api token是你配置相关生成的，详细参考官方及cloudflare插件github。
#.........<省略>........
}

:7443, *.xx.yy:7443 { #*.xx.yy修改为自己的域名。注意：逗号与域名之间有一个空格。*.xx.yy表示申请通配符证书。
#.........<省略>........
	tls {
		ciphers TLS_AES_256_GCM_SHA384 TLS_AES_128_GCM_SHA256 TLS_CHACHA20_POLY1305_SHA256 TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 #无RSA证书，已删除了所有RSA算法的密码套件。
#.........<省略>........
#注意：
#1、caddy采用DNS-01验证方式申请的证书与域名是一一对应的，不支持申请包含根域名的通配符证书。
#2、可能需要调整限定域名访问范围，不严格可直接修改为通配符域名。
